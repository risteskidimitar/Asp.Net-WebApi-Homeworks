// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.App.DataModels;

namespace ToDo.App.DataModels.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    partial class ToDoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.App.DataModels.SubTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsCompleted");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("TodoId");

                    b.HasKey("Id");

                    b.HasIndex("TodoId");

                    b.ToTable("SubTask");

                    b.HasData(
                        new { Id = 1, IsCompleted = true, TaskDescription = "5x5 pull-aps", Title = "pullups", TodoId = 1 },
                        new { Id = 2, IsCompleted = true, TaskDescription = "5x10 dips", Title = "dips", TodoId = 1 },
                        new { Id = 3, IsCompleted = false, TaskDescription = "Making portfolio analysis", Title = "Quarterly Reports", TodoId = 2 },
                        new { Id = 4, IsCompleted = false, TaskDescription = "Studing WebApi at SEDC", Title = "Web Api", TodoId = 2 }
                    );
                });

            modelBuilder.Entity("ToDo.App.DataModels.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<bool>("IsCompleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new { Id = 1, DateCreated = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), IsCompleted = true, Title = "Calisthenics Workout", UserId = 1 },
                        new { Id = 2, DateCreated = new DateTime(2020, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), IsCompleted = false, Title = "Working", UserId = 1 }
                    );
                });

            modelBuilder.Entity("ToDo.App.DataModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new { Id = 1, FirstName = "Dimitar", LastName = "Risteski", Password = "{??o?j???ds?[??", Username = "dimris" }
                    );
                });

            modelBuilder.Entity("ToDo.App.DataModels.SubTask", b =>
                {
                    b.HasOne("ToDo.App.DataModels.Todo", "Todo")
                        .WithMany("Subtasks")
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ToDo.App.DataModels.Todo", b =>
                {
                    b.HasOne("ToDo.App.DataModels.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
